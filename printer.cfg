# !CR-30 PrintMill
# printer_size: 200x170x*
# version: 3.6
# This file contains pin mappings for the Creality CR-30 PrintMill v4.2.10 board. To
# use this config, during "make menuconfig" select the STM32F103 with
# a "28KiB bootloader" and serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10)

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

###fluidd set
[include cx_printer.cfg]

[display_status]
# for display messages in status panel

[pause_resume]
# for pause/resume functionality. 
# Mainsail/fluidd needs gcode macros for `PAUSE`, `RESUME` and `CANCEL_PRINT` to make the buttons work.

[force_move]
enable_force_move: True

###################
###   MACROS  #####
###################

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z4.5 F300
    G90
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
    G28 X Y
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    G1 Y{y_park} F2000
    M84
  CANCEL_PRINT_BASE

# Eject all printed parts from the belt
[gcode_macro BED_EJECT]
gcode:
  TURN_OFF_HEATERS
  G28 ; Re-home
  G1 X50 Y50 F6000 ; Move hotend out of the way of the belt
  G1 Z420 F4000 ; Unload belt
  G28 Z0 ; Re-home Z

[gcode_macro UNLOCK_MOVES]
description: "Unlock movement without homing (for setup/testing only)"
gcode:
  SET_KINEMATIC_POSITION X=0 Y=0 Z=0


###################
### XYZ Stepper ###
###################

[stepper_x]
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
microsteps: 32  # Change to 16 for original steppers
rotation_distance: 40 # Change to 80 for original steppers
full_steps_per_rotation: 400  #Change to 200 for original steppers
endstop_pin: ^!PC0
position_endstop: 0
position_min: -2
position_max: 220
homing_speed: 50

[stepper_y]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
microsteps: 32  # Change to 16 for original steppers
rotation_distance: 40 # Change to 80 for original steppers
full_steps_per_rotation: 400  #Change to 200 for original steppers
#endstop_pin: ^PC1 # Normal y-endstop pin
endstop_pin: ^!PC15 # Y-endstop in e0-endstop socket --> deactivated filament sensor
position_endstop: 0
position_min: -2
position_max: 240
homing_speed: 30

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
full_steps_per_rotation: 200
#rotation_distance: 2.78
rotation_distance: 2.75
endstop_pin: ^!PC2
position_endstop: 0
position_min: -200
position_max: 20000000

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 1.300
interpolate: True
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). This interpolation does
#   introduce a small systemic positional deviation - see
#   TMC_Drivers.md for details. The default is True.
#   The amount of current (in amps RMS) to configure the driver to use
#   during stepper movement. This parameter must be provided.
#hold_current:
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
sense_resistor: 0.110
#   The resistance (in ohms) of the motor sense resistor. The default
#   is 0.110 ohms.
stealthchop_threshold: 999999
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.


[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
interpolate: True
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). This interpolation does
#   introduce a small systemic positional deviation - see
#   TMC_Drivers.md for details. The default is True.
run_current: 1.300
#   The amount of current (in amps RMS) to configure the driver to use
#   during stepper movement. This parameter must be provided.
#hold_current:
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
sense_resistor: 0.110
#   The resistance (in ohms) of the motor sense resistor. The default
#   is 0.110 ohms.
stealthchop_threshold: 999999
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
interpolate: True
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). This interpolation does
#   introduce a small systemic positional deviation - see
#   TMC_Drivers.md for details. The default is True.
run_current: 0.700
#   The amount of current (in amps RMS) to configure the driver to use
#   during stepper movement. This parameter must be provided.
#hold_current:
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
sense_resistor: 0.110
#   The resistance (in ohms) of the motor sense resistor. The default
#   is 0.110 ohms.
stealthchop_threshold: 0
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
interpolate: True
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). This interpolation does
#   introduce a small systemic positional deviation - see
#   TMC_Drivers.md for details. The default is True.
run_current: 0.500
#   The amount of current (in amps RMS) to configure the driver to use
#   during stepper movement. This parameter must be provided.
#hold_current:
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
sense_resistor: 0.110
#   The resistance (in ohms) of the motor sense resistor. The default
#   is 0.110 ohms.
stealthchop_threshold: 0
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.


################
### NEOPIXEL ###
################

#Not added yet
#[neopixel neopixel]
#pin: PA8
#chain_count: 58
#color_order: GRBW
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
#initial_RED: 1.0
#initial_GREEN: 0.2
#initial_BLUE: 1.0
#initial_WHITE: 1.0


[filament_switch_sensor filament_sensor]
pause_on_runout: True
switch_pin: ^!PA6

[idle_timeout]
timeout: 172800

######################
### PRINTER BASICS ###
######################

[printer]
kinematics: corexy # https://klipper.discourse.group/t/independant-acceleration-limits-for-x-and-y-axes/3831/2
max_velocity: 300
max_accel: 8000
max_z_velocity: 12
max_z_accel: 50
square_corner_velocity: 5.0

[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD1
microsteps: 16
full_steps_per_rotation: 200

rotation_distance: 22.48094064725844 #Clockwork2
gear_ratio: 50:10 #Clockwork2

#rotation_distance: 22.6789 #BMG Extruder
#gear_ratio: 50:17 #BMG Extruder

#rotation_distance: 7.711 #Original Extruder

nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PC8
sensor_type: ATC Semitec 104GT-2
#sensor_type: EPCOS 100K B57560G104F #Original
sensor_pin: PA0
control: pid
pid_kp = 32.566
pid_ki = 2.412
pid_kd = 109.910
min_temp: -270
max_temp: 360
max_power: 1.0
min_extrude_temp: 170
max_extrude_only_distance: 3000.0
pressure_advance: 0.020000
pressure_advance_smooth_time: 0.01

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

######################
####### FANS #########
######################

# K-FAN1
[fan]
pin: PC7

# K-FAN2
[heater_fan Hotend]
pin: PC6
max_power: 1.0
shutdown_speed: 0.0
#cycle_time:
#hardware_pwm:
#kick_start_time:
off_below: 0.1
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
heater: extruder
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 70.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0

# K-FAN3
[controller_fan Mainboard]
pin: PB15
max_power: 1.0
shutdown_speed: 0.0
#cycle_time:
#hardware_pwm:
#kick_start_time: 1
off_below: 0.2
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
fan_speed: 0.5
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
idle_timeout: 300
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
idle_speed: 0.2
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater:
stepper: stepper_x

[mcu]
serial: /dev/serial/by-id/usb_serial_1
restart_method: command

# [mcu rpi]
# serial: /tmp/klipper_host_mcu

# [adxl345]
# cs_pin: rpi:None
# spi_speed: 2000000
# spi_bus: spidev2.0

# [resonance_tester]
# accel_chip: adxl345
# accel_per_hz: 70
# probe_points:
#    125,125,10

[bed_screws]
screw1: 10, 0.725
screw2: 190, 0.725
screw3: 190, 190
screw4: 10, 190

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 5000
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5.0

# Override to support unlimited belt size
# (homing Z simply resets its virtual position to 0.0)
[homing_override]
axes: z
set_position_z: 0
gcode:
  {% if printer.homed_axes != 'XYZ' %}
    # status_homing
    M117 Homing
    RESPOND MSG="Homing"
    {% if params.X is not defined and params.Y is not defined and params.Z is not defined %}G28 X0 Y0{% endif %}
    {% if params.X is defined %}G28 X0{% endif %}
    {% if params.Y is defined %}G28 Y0{% endif %}
    G92 Z0
  {% endif %}
  G92 Z0



# Enable SD file loop support
[sdcard_loop]

# 'Marlin' style M808 compatibility macro for SDCard looping
[gcode_macro M808]
gcode:
    {% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
    {% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
    {% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[gcode_arcs]
#resolution: 1.0
[exclude_object]


[include timelapse.cfg]
[include cx_gmcro.cfg]
